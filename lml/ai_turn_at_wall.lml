(letrec (init map lman lmanpos step mapobj findx nextstep)
        ((lambda (ws unused) (tuple 42 step))
         (lambda (ws) (car ws))
         (lambda (ws) (car (cdr ws)))
         (lambda (ws) (car (cdr (lman ws))))
		 (lambda (ai ws) (tuple (print (mapobj (map ws) (nextstep (lmanpos ws)))) 1))
	     (lambda (map pos)
		   (if (eq (cdr pos) 0)
			   (findx (car map) (car pos))
			 (mapobj (cdr map) (tuple x (- y 1)))))
		 (lambda (row x)
		   (if (eq x 0)
			   (car row)
			 (findx (cdr row) (- x 1))))
         (lambda (pos dir)
            (let (x y) ((car pos) (cdr pos))
              (if (eq dir 0)
                (tuple x (- y 1))
                (if (eq dir 1)
                   (tuple (+ x 1) y)
                   (if (eq dir 2)
                      (tuple x (+ y 1))
					  (tuple (- x 1) y)))))))
  (init)
)
