(letrec (init map lman lmanpos lmandir step mapobj findx nextstep)
  ((lambda (ws unused) (tuple 42 step))
   (lambda (ws) (car ws))
   (lambda (ws) (car (cdr ws)))
   (lambda (ws) (car (cdr (lman ws))))
   (lambda (ws) (car (cdr (cdr (lman ws)))))
   (lambda (ai ws) (tuple 42
                          (let (obj) ((mapobj (map ws) (nextstep (lmanpos ws) (lmandir ws))))
                               (if (eq obj 0)
                                   (let (newdir) ((+ 1 (lmandir ws)))
                                        (if (> (print newdir) 3)
                                            0
                                          newdir))
                                 (lmandir ws)))))
   (lambda (map pos)
     (let (x y) ((car pos) (cdr pos))
          (if (eq y 0)
              (findx (car map) x)
            (mapobj (cdr map) (tuple x (- y 1))))))
   (lambda (row x)
     (if (eq x 0)
         (car row)
       (findx (cdr row) (- x 1))))
   (lambda (pos dir)
     (let (x y) ((car pos) (cdr pos))
          (if (eq dir 0)
              (tuple x (- y 1))
            (if (eq dir 1)
                (tuple (+ x 1) y)
              (if (eq dir 2)
                  (tuple x (+ y 1))
                (tuple (- x 1) y)))))))
  (init)
  )
