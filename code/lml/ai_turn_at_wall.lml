(letrec (init map lman lmanpos lmandir turncw turnccw step mapobj findx nextstep)
  ((lambda (ws unused) (tuple 42 step))
   (lambda (ws) (car ws))
   (lambda (ws) (car (cdr ws)))
   (lambda (ws) (car (cdr (lman ws))))
   (lambda (ws) (car (cdr (cdr (lman ws)))))
   (lambda (dir) (let (newdir) ((+ 1 dir))
                      (if (> newdir 3)
                          0
                        newdir)))
   (lambda (dir) (let (newdir) ((- dir 1))
                      (if (< newdir 0)
                          3
                        newdir)))
   (lambda (ai ws) (tuple 42
                          ;; Get the map object in the direction we're facing
                          (let (obj) ((mapobj (map ws) (nextstep (lmanpos ws) (lmandir ws))))
                               (if (eq obj 0)
                                   ;; At a wall? Just turn clockwise
                                   (turncw (lmandir ws))
                                 ;; Not facing a wall, just keep on going
                                 (lmandir ws)))))
   (lambda (map pos)
     (let (x y) ((car pos) (cdr pos))
          (if (eq y 0)
              (findx (car map) x)
            (mapobj (cdr map) (tuple x (- y 1))))))
   (lambda (row x)
     (if (eq x 0)
         (car row)
       (findx (cdr row) (- x 1))))
   (lambda (pos dir)
     (let (x y) ((car pos) (cdr pos))
          (if (eq dir 0)
              (tuple x (- y 1))
            (if (eq dir 1)
                (tuple (+ x 1) y)
              (if (eq dir 2)
                  (tuple x (+ y 1))
                (tuple (- x 1) y)))))))
  (init)
  )
